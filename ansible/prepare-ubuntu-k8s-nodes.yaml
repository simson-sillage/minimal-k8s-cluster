---
- name: Prepare Ubuntu server as k8s node
  hosts: all
  tasks:
    - name: Perform dist-upgrade
      ansible.builtin.apt:
        upgrade: dist
        update_cache: true

    - name: Check if reboot is required
      ansible.builtin.stat:
        path: /var/run/reboot-required
        get_md5: false
      register: reboot

    - name: Reboot
      ansible.builtin.reboot:
      when: reboot.stat.exists

    - name: Remove obsolete dependencies
      ansible.builtin.apt:
        autoremove: true

    - name: Install required dependencies for k8s
      ansible.builtin.apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl

    - name: Configure modules persistently for container runtime
      ansible.builtin.copy:
        src: configs/k8s-modules.conf
        dest: /etc/modules-load.d/k8s.conf
        owner: root
        group: root
        mode: "0644"

    - name: Load modules for container runtime
      community.general.modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter

    - name: Configure sysctl params persistently for container runtime
      ansible.builtin.copy:
        src: configs/k8s-sysctl.conf
        dest: /etc/sysctl.d/k8s.conf
        owner: root
        group: root
        mode: "0644"

    - name: Set sysctl params
      ansible.posix.sysctl:
        name: "{{ item }}"
        value: "1"
        state: present
      loop:
        - net.bridge.bridge-nf-call-iptables
        - net.bridge.bridge-nf-call-ip6tables
        - net.ipv4.ip_forward

    # This check only verifies if containerd is running. If the installation failed, CNI and runc might be missing
    - name: Check if containerd is already running
      ansible.builtin.command: systemctl status containerd.service
      register: containerd_status
      ignore_errors: true
      changed_when: containerd_status.rc != 0

    - name: Install containerd, runc and CNI
      when: containerd_status.rc == 4
      ansible.builtin.import_tasks: setup-containerd.yaml

    - name: Start the containerd service
      ansible.builtin.systemd:
        name: containerd
        state: started
        enabled: true
        daemon_reload: true

    - name: Add the k8s signing key
      ansible.builtin.copy:
        src: configs/k8s-archive-keyring.gpg
        dest: /etc/apt/keyrings/kubernetes-archive-keyring.gpg
        owner: root
        group: root
        mode: "0644"

    - name: Add the k8s apt/deb repository
      ansible.builtin.copy:
        src: configs/k8s-apt-sources.list
        dest: /etc/apt/sources.list.d/kubernetes.list
        owner: root
        group: root
        mode: "0644"

    - name: Install kubeadm, kubelet and kubectl
      ansible.builtin.apt:
        update_cache: true
        pkg:
          - kubelet
          - kubeadm
          - kubectl
